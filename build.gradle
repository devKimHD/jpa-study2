

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	//버전업으로 인한 의존성 밸리데이션 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-hibernate6
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6'
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta")
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
// 없어도 돌아가는 부분// Querydsl 설정부
def generated = 'src/main/generated'
// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {	options.generatedSourceOutputDirectory = file(generated)}
// java source set 에 querydsl QClass 위치 추가
sourceSets {	main.java.srcDirs += "$projectDir/build/generated"}
// gradle clean 시에 QClass 디렉토리 삭제
 clean {	delete file('src/main/generated')}

tasks.named('test') {
	useJUnitPlatform()
}

